"""
Django settings for CultureClap project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

SITE_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))

BASE_DIR = os.path.abspath(os.path.join(SITE_ROOT, ".."))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i8lprv_ohea&m1wcv7=7kxr)j&v4e4%#h%%%c#@a0w0p9c-*!c'


POSTGIS_TEMPLATE = 'digisnaxx'
# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = False
# TEMPLATE_DEBUG = False
DEBUG = True
USE_X_FORWARDED_HOST = True

ALLOWED_HOSTS = [
    'api.mnactivist.org',
    'localhost',
]

SITE_ID = 1

# Application definition

INSTALLED_APPS = (
    'django_admin_bootstrapped',
    'django.contrib.sitemaps',
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
#    'blog',
    # 'disqus',
    'rest_framework',
    'admin_reorder',
    # 'accounts',
    'mathfilters',
    'analytical',
#    'dexScraps',

    'crispy_forms',
    'pagedown',
    'markdown_deux',
    'popolo',

    # 'copwatch',
    'dex',
#    'trip_trap',
    'cities',
)

CRISPY_TEMPLATE_PACK = 'bootstrap3'    

AUTH_USER_MODEL = 'auth.User'

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
)

ROOT_URLCONF = 'MnActivist.urls'

WSGI_APPLICATION = 'MnActivist.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'mnapopolo',
        'USER': 'webmech',
        'PASSWORD': '09c28r2003c',
        'HOST': 'localhost',
        'PORT': '',
    },
}

# https://docs.djangoproject.com/en/1.7/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Chicago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/
STATIC_URL = '/static/'
# Additional static file locations.
STATICFILES_DIRS = [os.path.join(SITE_ROOT, 'static')]
STATIC_ROOT = os.path.join(os.path.dirname(SITE_ROOT), 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(SITE_ROOT, 'media')


# Absolute path to the directory where templates are stored.

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(SITE_ROOT, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ],
    'PAGE_SIZE': 100
}


DISQUS_API_KEY = 'q2pPhqehQvIX1WykezywECg1qOlxcF9HzRIvW5VWTguqCQ4HGKSOIzR2qyUh1vVx'
DISQUS_WEBSITE_SHORTNAME = 'cultureclap'

GOOGLE_ANALYTICS_PROPERTY_ID = 'UA-74321216-1'
GOOGLE_ANALYTICS_DISPLAY_ADVERTISING = True
GOOGLE_ANALYTICS_SITE_SPEED = True
ANALYTICAL_INTERNAL_IPS = ['75.72.181.29']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'canin.apple@gmail.com'
EMAIL_HOST_PASSWORD = 'slbfoalrwlmgswbo'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

ADMIN_REORDER = (
    # Keep original label and models
    #~ 'sites',
    #~ {'app': 'accounts',
     #~ 'label': 'Users',
     #~ 'models': ('accounts.User',
                #~ 'auth.Group')},

    {'app': 'dex', 
     'label': 'MnActivist',
     'models': (
                'dex.Org',         
                'dex.Events',
                'dex.PolicyRecord',
                'dex.SocialOutput',
                'dex.Platform',
                'dex.Tag',
                'dex.BasePerson',
         )},
    {'app': 'dex', 
     'label': 'Borders',
     'models': (
                'dex.dx_District',
                'dex.dx_City',
                'dex.dx_County', 
#                'digilegislature.Events',
                )},

    # {'app': 'copwatch',
    #  'label': 'Cop Watch',
    #  'models': ('copwatch.Complaint', 'copwatch.Officer'
    #             )},


    {'app': 'cities',
     'label': 'Base Map',
     'models': ('cities.City',
                'cities.Subregion',
                'cities.PostalCode',
                'dex.dx_District',
                'cities.Region',
                )},
     'auth', 'popolo',
)


CITIES_FILES = {
    'city': {
       'filenames': ["US.zip", "cities1000.zip", ],
       'urls': ['http://download.geonames.org/export/dump/'+'{filename}']
    },
}

CITIES_LOCALES = ['en', 'und', 'LANGUAGES']
CITIES_POSTAL_CODES = ['US',]
CITIES_PLUGINS = [
    'cities.plugin.reset_queries.Plugin',  # plugin that helps to reduce memory usage when importing large datasets (e.g. "allCountries.zip")
]

CITIES_SKIP_CITIES_WITH_EMPTY_REGIONS = True

GEOMETRY_BACKEND = 'geos'
LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse'
            }
        },
        'handlers': {
            'mail_admins': {
                'level': 'ERROR',
                'filters': ['require_debug_false'],
                'class': 'django.utils.log.AdminEmailHandler'
            },
            'console':{
                'level': 'DEBUG',
                'class': 'logging.StreamHandler'
            },
        },
        'loggers': {
            'django.request': {
                'handlers': ['mail_admins'],
                'level': 'ERROR',
                'propagate': True,
                },
            'cities': {
                'handlers': ['console'],
                'level': 'INFO'
            },

            }
    }
